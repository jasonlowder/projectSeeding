//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Seed
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KeplerEntities : DbContext
    {
        public KeplerEntities()
            : base("name=KeplerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Canvas> Canvases { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Canvas_ImageCategories> Canvas_ImageCategories { get; set; }
        public virtual DbSet<ImageCategory> ImageCategories { get; set; }
    
        public virtual ObjectResult<ProjectGetDetailsByIDV2_Result> ProjectGetDetailsByIDV2(Nullable<int> projectID, Nullable<int> languageID, Nullable<int> userID, Nullable<int> regionID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProjectGetDetailsByIDV2_Result>("ProjectGetDetailsByIDV2", projectIDParameter, languageIDParameter, userIDParameter, regionIDParameter);
        }
    
        public virtual ObjectResult<ProjectsGetFeaturedLatestByCategory_Result> ProjectsGetFeaturedLatestByCategory(Nullable<int> imageCategoryID, Nullable<int> startIndex, Nullable<int> resultCount, string cricutImagePath, string imageCategoryFilter)
        {
            var imageCategoryIDParameter = imageCategoryID.HasValue ?
                new ObjectParameter("ImageCategoryID", imageCategoryID) :
                new ObjectParameter("ImageCategoryID", typeof(int));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var resultCountParameter = resultCount.HasValue ?
                new ObjectParameter("ResultCount", resultCount) :
                new ObjectParameter("ResultCount", typeof(int));
    
            var cricutImagePathParameter = cricutImagePath != null ?
                new ObjectParameter("CricutImagePath", cricutImagePath) :
                new ObjectParameter("CricutImagePath", typeof(string));
    
            var imageCategoryFilterParameter = imageCategoryFilter != null ?
                new ObjectParameter("ImageCategoryFilter", imageCategoryFilter) :
                new ObjectParameter("ImageCategoryFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProjectsGetFeaturedLatestByCategory_Result>("ProjectsGetFeaturedLatestByCategory", imageCategoryIDParameter, startIndexParameter, resultCountParameter, cricutImagePathParameter, imageCategoryFilterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProjectsGetFeaturedLatestByCategoryTotal(Nullable<int> imageCategoryID)
        {
            var imageCategoryIDParameter = imageCategoryID.HasValue ?
                new ObjectParameter("ImageCategoryID", imageCategoryID) :
                new ObjectParameter("ImageCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProjectsGetFeaturedLatestByCategoryTotal", imageCategoryIDParameter);
        }
    }
}
